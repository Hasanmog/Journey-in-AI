# -*- coding: utf-8 -*-
"""Gold_price.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FdpsqdCd8nj2Y6yfpdImPy2BJ_wamOAm
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import seaborn as sns
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

gold = pd.read_csv('/content/gld_price_data.xls')

gold.describe() #GLD --> gold price

corr = gold.corr()

plt.figure(figsize=(10,10))
sns.heatmap(corr , cbar=True , square=True , fmt='.1f',annot=True,annot_kws={'size':8},
            cmap='BrBG')

sns.displot(gold['GLD'],color='Green')

X = gold.drop(['Date','GLD'],axis=1)
Y=gold['GLD']

X_train,X_test,y_train,y_test = train_test_split(X,Y,test_size=0.2,random_state=2)

model = RandomForestRegressor(n_estimators=100)
model.fit(X_train,y_train)

prediction = model.predict(X_test)

error = metrics.r2_score(y_test , prediction)
print(error)

y_test = list(y_test)

plt.plot(y_test,color='Blue',label='Actual Value')
plt.plot(prediction,color='green',label='Predicted Value')
plt.title('Actual vs Predicted')
plt.xlabel('Number of values')
plt.ylabel('GLD price')
plt.legend()
plt.show()